# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2019-08-08 17:39
from __future__ import unicode_literals

import datetime
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('senders', '0001_initial'),
        ('accounts', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('summary', models.CharField(blank=True, default='', max_length=254)),
                ('description', models.TextField(blank=True, default='')),
                ('start', models.DateTimeField()),
                ('end', models.DateTimeField()),
                ('calendar_id', models.CharField(blank=True, default='', max_length=1024)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'events',
                'ordering': ('start', 'end', 'sender'),
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Override',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('method', models.CharField(choices=[('email', 'email'), ('popup', 'popup'), ('sms', 'sms')], max_length=5)),
                ('minutes', models.PositiveIntegerField(default=10, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(40320)])),
            ],
            options={
                'verbose_name': 'Override',
                'verbose_name_plural': 'Overrides',
                'ordering': ('id',),
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Recurrence',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rule', models.CharField(choices=[('RRULE', 'RRULE'), ('EXRULE', 'EXRULE'), ('RDATE', 'RDATE'), ('EXDATE', 'EXDATE')], default='RRULE', max_length=6)),
                ('freq', models.CharField(choices=[('days', 'DAILY'), ('weeks', 'WEEKLY'), ('monthds', 'MONTHLY'), ('years', 'MONTHLY')], default='DAILY', max_length=5)),
                ('until', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('count', models.IntegerField(blank=True, default=0)),
                ('interval', models.IntegerField(blank=True, default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Recurrence',
                'verbose_name_plural': 'Recurrences',
                'ordering': ('created_at',),
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Reminder',
            fields=[
                ('event', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='event_reminder', serialize=False, to='events.Event', verbose_name='event_reminder')),
                ('useDefault', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Reminder',
                'verbose_name_plural': 'Reminders',
                'ordering': ('created_at',),
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='recurrence',
            name='event',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='event_recurrences', to='events.Event'),
        ),
        migrations.AddField(
            model_name='event',
            name='accounts',
            field=models.ManyToManyField(blank=True, help_text='The accounts this event belongs to. A event will be sent to all accounts granted to each of their accounts.', related_name='event_set', related_query_name='account', to='accounts.Account', verbose_name='accounts'),
        ),
        migrations.AddField(
            model_name='event',
            name='sender',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sender_events', to='senders.Sender'),
        ),
        migrations.AlterUniqueTogether(
            name='reminder',
            unique_together=set([('event',)]),
        ),
        migrations.AlterUniqueTogether(
            name='recurrence',
            unique_together=set([('id',)]),
        ),
        migrations.AddField(
            model_name='override',
            name='reminder',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='overrides', to='events.Reminder'),
        ),
        migrations.AlterUniqueTogether(
            name='event',
            unique_together=set([('id',)]),
        ),
    ]
